# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_call:
    inputs:
      limit_parallel:
        required: false
        type: boolean
        default: false
        description: "Limit concurrent jobs in general and specifically limit R-CMD-check to 3 in parallel (default: false)"

name: phs_package_checks.yaml

permissions:
  contents: read
  pull-requests: read
  statuses: read
  
jobs:
  # Initial job to post status
  init:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Create initial status check
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'pending',
              description: 'Package checks in progress',
              context: 'PHS Package Checks'
            });
  Style_and_document:
    uses: ./.github/workflows/phs_style_and_document.yaml
    permissions:
      contents: write
      pull-requests: write
    secrets: inherit
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
  R-CMD-check-core:
    needs: [Style_and_document]
    uses: ./.github/workflows/phs_R-CMD-check-core.yaml
    permissions:
      contents: read
    secrets: inherit
    concurrency:
      group: ${{ inputs.limit_parallel == false && format('r-cmd-check-{0}-{1}', github.workflow, github.run_id) || 'package-checks-queue' }}
      cancel-in-progress: false
  R-CMD-check-extended:
    needs: [Style_and_document]
    uses: ./.github/workflows/phs_R-CMD-check-extended.yaml
    permissions:
      contents: read
    secrets: inherit
    concurrency:
      group: ${{ inputs.limit_parallel == false && format('r-cmd-check-{0}-{1}', github.workflow, github.run_id) || 'package-checks-queue' }}
      cancel-in-progress: false
  R-CMD-check-no-suggests:
    needs: [R-CMD-check-core]
    uses: ./.github/workflows/phs_R-CMD-check-no-suggests.yaml
    permissions:
      contents: read
    secrets: inherit
    concurrency:
      group: ${{ inputs.limit_parallel == false && format('r-cmd-check-{0}-{1}', github.workflow, github.run_id) || 'package-checks-queue' }}
      cancel-in-progress: false
  test-coverage:
    needs: [R-CMD-check-core]
    uses: ./.github/workflows/phs_test_coverage.yaml
    permissions:
      contents: read
    secrets: inherit
    concurrency:
      group: ${{ inputs.limit_parallel == false && format('test-coverage-{0}-{1}', github.workflow, github.run_id) || 'package-checks-queue' }}
      cancel-in-progress: false
  pkgdown:
    needs: [Style_and_document]
    uses: ./.github/workflows/phs_pkgdown.yaml
    permissions:
      contents: write
    secrets: inherit
# Final job to update status
  finalize:
    needs: [Style_and_document, R-CMD-check-core, test-coverage, pkgdown]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      statuses: write
    steps:
      - name: Update final status
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const allSuccess = ${{ needs.Style_and_document.result == 'success' && 
                                    needs.R-CMD-check-core.result == 'success' && 
                                    needs.test-coverage.result == 'success' && 
                                    needs.pkgdown.result == 'success' }};
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: allSuccess ? 'success' : 'failure',
              description: allSuccess ? 'All checks passed' : 'Some checks failed',
              context: 'PHS Package Checks'
            });
